#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable

#define G_CACHE_SET 1
#include "../global_caches.h"
#undef G_CACHE_SET

layout(binding = 0, set = 0) uniform accelerationStructureNV topLevelAS;
layout(binding = 2, set = 0) uniform Uniforms {
    vec3 sunDirection;
} scene;

layout(location = 0) rayPayloadNV bool shadowed;

layout(binding = 2, set = 1, r32f) uniform image2D initial_distances;

void main() {
    const ivec2 xy = ivec2(gl_LaunchIDNV.xy);
    const vec3 origin = imageLoad(CACHE_ORIGIN, xy).xyz;

    const uint cullMask = 0xff;
    const float tmin = 0.01;
    float tmax = 200.0;

    shadowed = true;

    if (imageLoad(CACHE_INIT_DISTANCES, xy).x == 0.0) {
        tmax = 0.01;
    }

    traceNV(
        topLevelAS, 
        gl_RayFlagsTerminateOnFirstHitNV, 
        cullMask,
        1, 0, 1, 
        origin,
        tmin, 
        -scene.sunDirection,
        tmax, 
        0
    );

    if (shadowed) {
        imageStore(CACHE_SHADOWS, xy, vec4(0.3)); //FIXME replace by 0
    } else {
        imageStore(CACHE_SHADOWS, xy, vec4(1.0));
    }
}
