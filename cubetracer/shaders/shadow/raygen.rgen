#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable

#define G_UNIFORM_INC_NV
#define G_UNIFORM_SET 0
#include "../global_uniforms.h"
#undef G_UNIFORM_SET
#undef G_UNIFORM_INC_NV

#include "../payloads.h"
#define G_CACHE_SET 1
#include "../global_caches.h"
#undef G_CACHE_SET

layout(location = PAYLOAD_IDX_SHADOWED) rayPayloadNV bool PAYLOAD_SHADOWED;

void main() {
    const ivec2 xy = ivec2(gl_LaunchIDNV.xy);
    const vec3 origin = imageLoad(CACHE_ORIGIN, xy).xyz;

    const uint cullMask = 0xff;
    const float tmin = 0.01;
    float tmax = 200.0;

    PAYLOAD_SHADOWED = true;

    if (imageLoad(CACHE_INIT_DISTANCES, xy).x == 0.0) {
        tmax = 0.01;
    }

    traceNV(
        UNI_TLAS,
        gl_RayFlagsTerminateOnFirstHitNV,
        cullMask,
        1, 0, 1,
        origin,
        tmin,
        -UNI_SCENE.sunDirection,
        tmax,
        PAYLOAD_IDX_SHADOWED
    );

    if (PAYLOAD_SHADOWED) {
        imageStore(CACHE_SHADOWS, xy, vec4(0.));
    } else {
        imageStore(CACHE_SHADOWS, xy, vec4(1.0));
    }
}
